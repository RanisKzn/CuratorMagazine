@using CuratorMagazineWebAPI.Models.Entities
@using CuratorMagazineBlazorApp.Models.States
@using CuratorMagazineWebAPI.Models.Entities.Domains
@if (CurrentUser?.RoleId == 1)
{
    <div class="collapse" id="navbarToggleExternalContent">
        <ul class="nav nav-pills nav-fill bg-secondary bg-opacity-50">
            <li class="nav-item">
                <a class="nav-link text-white" @onclick="ChangeOnHeadStateRoleNavBar">РАБОТА С ЗАМЕСТИТЕЛЕМ ДИРКЕТОРА ВР</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" @onclick="ChangeOnViceStateRoleNavBar">СБОР СТАТИСТИКИ</a>
            </li>
        </ul>
    </div>
}
else if (CurrentUser?.RoleId == 2)
{
    <div class="collapse" id="navbarToggleExternalContent">
        <ul class="nav nav-pills nav-fill bg-secondary bg-opacity-50">
            <li class="nav-item">
                <a class="nav-link text-white" href="../ViceDirectorEW/vdew1.html">РАБОТА С ГРУППОЙ</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="../ViceDirectorEW/vdew2.html">РАБОТА С КУРАТОРОМ</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="../ViceDirectorEW/vdew3.html">СБОР СТАТИСТИКИ</a>
            </li>
        </ul>
    </div>
}
else if (CurrentUser?.RoleId == 3)
{
    <div class="collapse" id="navbarToggleExternalContent">
        <ul class="nav nav-pills nav-fill bg-secondary bg-opacity-50">
            <li class="nav-item">
                <a class="nav-link text-white" href="../Curator/cur1.html">РАБОТА С ГРУППОЙ</a>
            </li>
        </ul>
    </div>
}
else
{

}
@code {
    [Parameter]
    public User? CurrentUser { get; set; }

    [Parameter]
    public StateRoleNavBar? StateRoleNavBar { get; set; } = new();

    [Parameter]
    public EventCallback<StateRoleNavBar> StateRoleNavBarCallback { get; set; }

    public void ChangeOnHeadStateRoleNavBar()
    {
        StateRoleNavBar = new StateRoleNavBar() { RoleName = "Head" };
        StateRoleNavBarCallback.InvokeAsync(StateRoleNavBar);
    }

    public void ChangeOnViceStateRoleNavBar()
    {
        StateRoleNavBar = new StateRoleNavBar() { RoleName = "Vice" };
        StateRoleNavBarCallback.InvokeAsync(StateRoleNavBar);
    }

    public void ChangeTutorOnStateRoleNavBar()
    {
        StateRoleNavBar = new StateRoleNavBar() { RoleName = "Tutor" };
        StateRoleNavBarCallback.InvokeAsync(StateRoleNavBar);
    }
}
